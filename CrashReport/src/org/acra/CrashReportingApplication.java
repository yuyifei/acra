/*
 *  Copyright 2010 Emmanuel Astier & Kevin Gaudin
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.acra;

import android.app.Activity;
import android.app.Application;
import android.net.Uri;

/**
 * <p>
 * Base class for any application which need to send crash reports. The final
 * application has to extend this class and at least implement the abstract
 * method {@link #getFormId()} by returning a valid GoogleDocs Form id string
 * generated by importing ACRA's specific spreadsheet template.
 * </p>
 * <p>
 * If you prefer sending crash reports to your own script on your own server,
 * you can override {@link #getFormUri()} and return any Url string to your
 * sever script (like : "http://www.myserver.com/myscript.php").
 * </p>
 * <p>
 * If some crash reports could not be sent (due to technical issues like loss of
 * network connection), their data is stored in the application private
 * filesystem and sent on the next <strong>Application</strong> start. This
 * means that the reports might be sent quite some time after the crash, because
 * a crash causes the Activity to be destroyed but not the Application.
 * </p>
 * <p>
 * If you would like to receive reports as soon as possible, you may want to
 * call {@link ErrorReporter#checkAndSendReports(android.content.Context)} on
 * {@link ErrorReporter#getInstance()} in your main {@link Activity} onCreate()
 * method.
 * </p>
 */
public abstract class CrashReportingApplication extends Application {
    protected static final String LOG_TAG = "CrashReport";

    /**
     * This is the identifier (value = 666) use for the status bar notification
     * issued when crashes occur.
     */
    public static final int NOTIF_CRASH_ID = 666;

    public static enum ReportingInteractionMode {
        SILENT, NOTIFICATION, TOAST;
    }

    /*
     * (non-Javadoc)
     * 
     * @see android.app.Application#onCreate()
     */
    @Override
    public void onCreate() {
        super.onCreate();
        // Initialise ErrorReporter with all required data
        ErrorReporter errorReporter = ErrorReporter.getInstance();
        errorReporter.setFormUri(getFormUri());
        errorReporter
                .setReportingInteractionMode(getReportingInteractionMode() != null ? getReportingInteractionMode()
                        : ReportingInteractionMode.SILENT);

        if (getToastTextResource() != -1) {
            ErrorReporter.getInstance().setToastText(
                    getText(getToastTextResource()));
        }

        // Activate the ErrorReporter
        errorReporter.init(this);

        // Check for pending reports

        errorReporter.checkReportsOnApplicationStart();
    }

    /**
     * <p>
     * Override this method to send the crash reports to your own server script.
     * Your script will have to get HTTP POST request parameters named as
     * described in {@link ErrorReporter} source code (*_KEY fields values).
     * </p>
     * <p>
     * If you override this method with your own url, your implementation of the
     * abstract {@link #getFormId()} can be empty as it will not be called by
     * any other method or object.
     * </p>
     * 
     * @return A String containing the Url of your custom server script.
     */
    public Uri getFormUri() {
        return Uri.parse("http://spreadsheets.google.com/formResponse?formkey="
                + getFormId() + "&amp;ifq");
    }

    /**
     * Implement this method by returning a String containing the id of a valid
     * GoogleDocs Form.
     * 
     * @return The Id of your GoogleDoc Form generated by importing ACRA's
     *         spreadsheet template.
     */
    public abstract String getFormId();

    /**
     * Override this method to provide a message that will be displayed to the
     * user in a dialog to ask him if he wants to send reports.
     * 
     * @return The resource Id of your message.
     */
    public int getToastTextResource() {
        return -1;
    }

    public ReportingInteractionMode getReportingInteractionMode() {
        if (getToastTextResource() != -1) {
            return ReportingInteractionMode.TOAST;
        } else {
            return ReportingInteractionMode.SILENT;
        }
    }

    public int getCrashDialogTextResId() {
        throw new IllegalStateException("You must override CrashReportingApplication.getCrashDialogTextResId() to provide a resource identifier for the text of the crash dialog.");
    }

    public int getCrashDialogCommentPromptResId() {
        return -1;
    }
    
}
